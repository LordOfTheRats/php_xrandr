<?php

/*
 * The MIT License
 *
 * Copyright 2015 - 2016 René Vögeli <rvoegeli@vhtec.de>.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
require_once dirname(__FILE__) . '/../../../src/Xrandr/Screen.php';

use \Xrandr\Screen;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-11-20 at 22:23:11.
 */
class ScreenTest extends PHPUnit_Framework_TestCase {

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {

	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {

	}

	/**
	 * @covers \Xrandr\Screen::parseLine
	 * @covers \Xrandr\Screen::__construct
	 * @covers \Xrandr\Screen::getId
	 * @covers \Xrandr\Screen::getMinimumGeometry
	 * @covers \Xrandr\Screen::getCurrentGeometry
	 * @covers \Xrandr\Screen::getMaximumGeometry
	 * @afterClass \Xrandr\Geometry
	 */
	public function testParseLine() {
		$object = Screen::parseLine("Screen 0: minimum 8 x 8, current 1360 x 768, maximum 32767 x 32767");
		$this->assertEquals(0, $object->getId());
		$this->assertAttributeNotEmpty("minimumGeometry", $object);
		$this->assertAttributeNotEmpty("currentGeometry", $object);
		$this->assertAttributeNotEmpty("maximumGeometry", $object);

		$this->assertAttributeEquals(8, "width", $object->getMinimumGeometry());
		$this->assertAttributeEquals(8, "height", $object->getMinimumGeometry());

		$this->assertAttributeEquals(1360, "width", $object->getCurrentGeometry());
		$this->assertAttributeEquals(768, "height", $object->getCurrentGeometry());

		$this->assertAttributeEquals(32767, "width", $object->getMaximumGeometry());
		$this->assertAttributeEquals(32767, "height", $object->getMaximumGeometry());

		$object = Screen::parseLine("Screen X: minimum foo, current 1234, maxi");
		$this->assertNull($object);
	}

}
